<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://mayfly277.github.io/</id><title>Mayfly</title><subtitle>Un blog avec des trucs de hacking à l'interieur.</subtitle> <updated>2022-10-22T11:01:15+02:00</updated> <author> <name>mayfly</name> <uri>https://mayfly277.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://mayfly277.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="fr" href="https://mayfly277.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator> <rights> © 2022 mayfly </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>GLPI htmlawed (CVE-2022-35914)</title><link href="https://mayfly277.github.io/posts/GLPI-htmlawed-CVE-2022-35914/" rel="alternate" type="text/html" title="GLPI htmlawed (CVE-2022-35914)" /><published>2022-10-03T00:00:00+02:00</published> <updated>2022-10-03T15:35:27+02:00</updated> <id>https://mayfly277.github.io/posts/GLPI-htmlawed-CVE-2022-35914/</id> <content src="https://mayfly277.github.io/posts/GLPI-htmlawed-CVE-2022-35914/" /> <author> <name>mayfly</name> </author> <category term="CVE" /> <summary> TL;DR; Infos On a recent pentest we faced an interesting scope with full up to date products and without any credentials. After spend some time on bruteforce dns, folders, all the login form and doing all kind of stuff i get nothing interesting. We found a GLPI product exposed on internet with a very recent vulnerability (an unauthenticated SQL injection, the vulnerability was publicized ... </summary> </entry> <entry><title>GOAD - part 8 - Privilege escalation</title><link href="https://mayfly277.github.io/posts/GOADv2-pwning-part8/" rel="alternate" type="text/html" title="GOAD - part 8 - Privilege escalation" /><published>2022-09-25T00:00:00+02:00</published> <updated>2022-10-22T10:56:54+02:00</updated> <id>https://mayfly277.github.io/posts/GOADv2-pwning-part8/</id> <content src="https://mayfly277.github.io/posts/GOADv2-pwning-part8/" /> <author> <name>mayfly</name> </author> <category term="AD" /> <summary> In the previous post (Goad pwning part7) we tried some attacks with MSSQL on the domain. This time we will get a web shell on IIS and try some privilege escalation techniques. IIS - webshell There is a simple asp.net application on http://192.168.56.22/, this application only give us a simple file upload functionality. From there we can upload a basic webshell in asp : webshell.asp ... </summary> </entry> <entry><title>GOAD - part 7 - MSSQL</title><link href="https://mayfly277.github.io/posts/GOADv2-pwning-part7/" rel="alternate" type="text/html" title="GOAD - part 7 - MSSQL" /><published>2022-09-12T00:00:00+02:00</published> <updated>2022-10-22T10:56:54+02:00</updated> <id>https://mayfly277.github.io/posts/GOADv2-pwning-part7/</id> <content src="https://mayfly277.github.io/posts/GOADv2-pwning-part7/" /> <author> <name>mayfly</name> </author> <category term="AD" /> <summary> In the previous post (Goad pwning part6) we tried some attacks with ADCS activated on the domain. Now let’s take a step back, and go back on the castelblack.north.sevenkingdoms.local to take a look at the MSSQL server. Before jump into this chapter, i have done some small configuration on the lab, to be sure you get it, you should pull the updates and play : ansible-playbook servers.yml to get... </summary> </entry> <entry><title>GOAD - part 6 - ADCS</title><link href="https://mayfly277.github.io/posts/GOADv2-pwning-part6/" rel="alternate" type="text/html" title="GOAD - part 6 - ADCS" /><published>2022-09-07T00:00:00+02:00</published> <updated>2022-10-22T10:56:54+02:00</updated> <id>https://mayfly277.github.io/posts/GOADv2-pwning-part6/</id> <content src="https://mayfly277.github.io/posts/GOADv2-pwning-part6/" /> <author> <name>mayfly</name> </author> <category term="AD" /> <summary> In the previous post (Goad pwning part5) we tried some attacks with a user account on the domain. On this part we will try attacks when an ADCS is setup in the domain. First we will use petitpotam unauthenticated and ESC8 attack to get domain admin on essos.local, next we will enumerate template certificate with certipy, bloodhound and a user account. To finish we will exploit the following att... </summary> </entry> <entry><title>GOAD - part 5 - exploit with user</title><link href="https://mayfly277.github.io/posts/GOADv2-pwning-part5/" rel="alternate" type="text/html" title="GOAD - part 5 - exploit with user" /><published>2022-07-20T00:00:00+02:00</published> <updated>2022-10-22T10:56:54+02:00</updated> <id>https://mayfly277.github.io/posts/GOADv2-pwning-part5/</id> <content src="https://mayfly277.github.io/posts/GOADv2-pwning-part5/" /> <author> <name>mayfly</name> </author> <category term="AD" /> <summary> In the previous post (Goad pwning part4) we played with relay ntlm. During this article we will continue to discover what can be done using a valid domain account Here we will only try samAccountName exploit and PrintNightmare as MS14-068 is now too old (Windows Server 2012 R2 max). SamAccountName (nopac) In the end of 2021 when everyone was worried about the log4j “log4shell” vulnerabilit... </summary> </entry> </feed>
